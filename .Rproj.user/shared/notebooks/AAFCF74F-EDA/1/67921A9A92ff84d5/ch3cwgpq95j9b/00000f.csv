"0","#| label: intial_split"
"0","#| echo: true"
"0",""
"0","from sklearn.model_selection import train_test_split"
"0","from plydata.one_table_verbs import pull"
"0","from mizani.formatters import comma_format, dollar_format"
"0",""
"0","ames = pd.read_csv(""../data/ames.csv"") >> mutate (Price_4_GLA= _.Sale_Price/_.Gr_Liv_Area)"
"0","print(""Tamaño de conjunto completo: "", ames.shape)"
"1","Tamaño de conjunto completo:  (2930, 75)
"
"0","y = ames >>  pull(""Price_4_GLA"")"
"0","X = select(ames, -_.Sale_Price, -_.Price_4_GLA)"
"0",""
"0","X=(X >> mutate(wood_prop= _.Wood_Deck_SF/_.Gr_Liv_Area,"
"0","              area_per_car=case_when({_.Garage_Cars== 0:0,"
"0","                                  _.Garage_Cars== 0:0,"
"0","                                  True:_.Garage_Area/ _.Garage_Cars}),"
"0","              last_remod = case_when({_.Year_Built>_.Year_Remod_Add: 2023-_.Year_Remod_Add,"
"0","                                  True: 2023-_.Year_Built}),"
"0","              Mo_Sold= _.Mo_Sold.astype('object')))"
"0",""
"0","numeric_column = ames >> pull(""Price_4_GLA"")"
"0","quartiles = np.percentile(numeric_column, [25, 50, 75])"
"0",""
"0","stratify_variable = pd.cut("
"0"," numeric_column, "
"0"," bins=[float('-inf'), quartiles[0], quartiles[1], quartiles[2], float('inf')],"
"0"," labels=[""Q1"", ""Q2"", ""Q3"", ""Q4""]"
"0"," )"
"0",""
"0","ames_x_train, ames_x_tst, ames_y_train, ames_y_tst = train_test_split("
"0"," X, y, "
"0"," test_size = 0.3, "
"0"," random_state = 12345, "
"0"," stratify = stratify_variable"
"0"," )"
"0"," "
"0"," stratify_variable = pd.cut("
"0"," ames_y_tst, "
"0"," bins=[float('-inf'), quartiles[0], quartiles[1], quartiles[2], float('inf')],"
"0"," labels=[""Q1"", ""Q2"", ""Q3"", ""Q4""]"
"0"," )"
"0"," "
"0"," "
"0"," ames_x_test, ames_x_val, ames_y_test, ames_y_val = train_test_split("
"0"," ames_x_tst, ames_y_tst, "
"0"," test_size = 1/3, "
"0"," random_state = 12345, "
"0"," stratify = stratify_variable"
"0"," )"
"0",""
