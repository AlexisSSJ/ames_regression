"0","kf = KFold(n_splits=10, shuffle=True, random_state=42)"
"0",""
"0",""
"0",""
"0","scoring = {"
"0","    'neg_mean_squared_error': make_scorer(mean_squared_error, greater_is_better=False),"
"0","    'r2': make_scorer(adjusted_r2_score, greater_is_better=True, n=np.ceil(len(ames_x_train)), p=len(num_cols)),"
"0","    'neg_mean_absolute_error': make_scorer(mean_absolute_error, greater_is_better=False),"
"0","    'mape': make_scorer(mean_absolute_percentage_error, greater_is_better=False)"
"0","}"
"0",""
"0",""
"0","param_grid = {"
"0"," 'n_neighbors': range(4, 20,),"
"0"," 'weights': [ 'distance'],"
"0"," 'metric': ['manhattan', 'hamming', 'cosine', 'chebyshev']"
"0","}"
"0",""
"0",""
"0","pipline_knn_cv=Pipeline(["
"0","  ('prep', preprocessor),"
"0","  ('cv' , GridSearchCV("
"0","    KNeighborsRegressor(), "
"0","      param_grid, "
"0","      cv=kf, "
"0","      scoring=scoring, "
"0","      refit='neg_mean_squared_error',"
"0","      verbose=2, "
"0","      n_jobs=7)"
"0","      )]"
"0","      )"
"0",""
