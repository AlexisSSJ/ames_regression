"0","preprocessor= ColumnTransformer(["
"0","  ('std', StandardScaler(), num_cols)"
"0","  ],"
"0","  remainder = 'drop', "
"0","  verbose_feature_names_out= False)"
"0",""
"0","param_grid = {"
"0"," 'n_neighbors': range(0, 105, 5),"
"0"," 'weights': ['uniform', 'distance'],"
"0"," 'metric': ['minkowski','euclidean', 'manhattan', 'hamming', 'cosine', 'chebyshev'],"
"0"," 'p': range(3,10)"
"0","}"
"0","    "
"0","    "
"0","gs_knn_cv = Pipeline(["
"0","  ('prep', preprocessor),"
"0","  ('cv', GridSearchCV("
"0","      KNeighborsRegressor(), "
"0","      param_grid, "
"0","      cv=kf, "
"0","      scoring=scoring, "
"0","      refit='neg_mean_squared_error',"
"0","      verbose=3, "
"0","      n_jobs=7))"
"0","])"
"0",""
"0","gs_knn_cv.fit(ames_x_train, Sale_Price_train)"
"1","Fitting 10 folds for each of 1764 candidates, totalling 17640 fits
"
"2","C:\Users\HP\DOCUME~1\VIRTUA~1\CD_AMA~1\lib\site-packages\sklearn\model_selection\_validation.py:378: FitFailedWarning: 
840 fits failed out of a total of 17640.
The score on these train-test partitions for these parameters will be set to nan.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
840 fits failed with the following error:
"
"2","Traceback (most recent call last):
  File ""C:\Users\HP\DOCUME~1\VIRTUA~1\CD_AMA~1\lib\site-packages\sklearn\model_selection\_validation.py"", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File ""C:\Users\HP\DOCUME~1\VIRTUA~1\CD_AMA~1\lib\site-packages\sklearn\neighbors\_regression.py"", line 215, in fit
    self._validate_params()
  File ""C:\Users\HP\DOCUME~1\VIRTUA~1\CD_AMA~1\lib\site-packages\sklearn\base.py"", line 600, in _validate_params
    validate_parameter_constr"
"2","aints(
  File ""C:\Users\HP\DOCUME~1\VIRTUA~1\CD_AMA~1\lib\site-packages\sklearn\utils\_param_validation.py"", line 97, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'n_neighbors' parameter of KNeighborsRegressor must be an int in the range [1, inf) or None. Got 0 instead.

"
"2","C:\Users\HP\DOCUME~1\VIRTUA~1\CD_AMA~1\lib\site-packages\sklearn\model_selection\_search.py:952: UserWarning: One or more of the test scores are non-finite: [            nan             nan             nan ... -2.99002968e+09
 -3.10627629e+09 -2.99002968e+09]
"
"2","C:\Users\HP\DOCUME~1\VIRTUA~1\CD_AMA~1\lib\site-packages\sklearn\model_selection\_search.py:952: UserWarning: One or more of the test scores are non-finite: [       nan        nan        nan ... 0.51767497 0.49879703 0.51767497]
"
"2","C:\Users\HP\DOCUME~1\VIRTUA~1\CD_AMA~1\lib\site-packages\sklearn\model_selection\_search.py:952: UserWarning: One or more of the test scores are non-finite: [            nan             nan             nan ... -35959.37652035
 -36980.26833576 -35959.37652035]
"
"2","C:\Users\HP\DOCUME~1\VIRTUA~1\CD_AMA~1\lib\site-packages\sklearn\model_selection\_search.py:952: UserWarning: One or more of the test scores are non-finite: [        nan         nan         nan ... -0.2174927  -0.22412329
 -0.2174927 ]
"
"1","Pipeline(steps=[('prep',
                 ColumnTransformer(transformers=[('std', StandardScaler(),
                                                  ['Bedroom_AbvGr',
                                                   'BsmtFin_SF_1',
                                                   'BsmtFin_SF_2',
                                                   'Bsmt_Full_Bath',
                                                   'Bsmt_Half_Bath',
                                                   'Bsmt_Unf_SF',"
"1","
                                                   'Enclosed_Porch',
                                                   'Fireplaces', 'First_Flr_SF',
                                                   'Full_Bath', 'Garage_Area',
                                                   'Garage_Cars', 'Gr_Liv_Area',
                                                   'Half_Bath', 'Kitchen_AbvGr',
                                                   'Latitude', 'Longitude',
                                     "
"1","              'Lot_Area', 'Lot_Frontage'...
                                          'weights': ['uniform', 'distance']},
                              refit='neg_mean_squared_error',
                              scoring={'mape': make_scorer(mean_absolute_percentage_error, greater_is_better=False),
                                       'neg_mean_absolute_error': make_scorer(mean_absolute_error, greater_is_better=False),
                                       'neg_mean_squared_error': make_scorer(mea"
"1","n_squared_error, greater_is_better=False),
                                       'r2': make_scorer(adjusted_r2_score, n=2051.0, p=35)},
                              verbose=3))])
"
